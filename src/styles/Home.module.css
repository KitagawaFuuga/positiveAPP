.page {
  --gray-rgb: 0, 0, 0;
  --gray-alpha-200: rgba(var(--gray-rgb), 0.08);
  --gray-alpha-100: rgba(var(--gray-rgb), 0.05);

  --button-primary-hover: #383838;
  --button-secondary-hover: #f2f2f2;

  display: grid;
  grid-template-rows: 20px 1fr 20px;
  align-items: center;
  justify-items: center;
  min-height: 100svh;
  gap: 32px;
  font-family: var(--font-geist-sans);
}

@media (prefers-color-scheme: dark) {
  .page {
    --gray-rgb: 255, 255, 255;
    --gray-alpha-200: rgba(var(--gray-rgb), 0.145);
    --gray-alpha-100: rgba(var(--gray-rgb), 0.06);

    --button-primary-hover: #ccc;
    --button-secondary-hover: #1a1a1a;
  }
}


.main ol {
  font-family: var(--font-geist-mono);
  padding-left: 0;
  margin: 0;
  font-size: 14px;
  line-height: 24px;
  letter-spacing: -0.01em;
  list-style-position: inside;
}

.main li:not(:last-of-type) {
  margin-bottom: 8px;
}

.main code {
  font-family: inherit;
  background: var(--gray-alpha-100);
  padding: 2px 4px;
  border-radius: 4px;
  font-weight: 60px;
}

.ctas {
  display: flex;
  gap: 16px;
}

.ctas a {
  appearance: none;
  border-radius: 128px;
  height: 48px;
  padding: 0 20px;
  border: none;
  border: 1px solid transparent;
  transition:
    background 0.2s,
    color 0.2s,
    border-color 0.2s;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 16px;
  line-height: 20px;
  font-weight: 50px;
}

a.primary {
  background: var(--foreground);
  color: var(--background);
  gap: 8px;
}

a.secondary {
  border-color: var(--gray-alpha-200);
  min-width: 180px;
}

.footer {
  grid-row-start: 3;
  display: flex;
  gap: 12px;
}

.footer a {
  display: flex;
  align-items: center;
  gap: 8px;
}

.footer img {
  flex-shrink: 0;
}

/* Enable hover only on non-touch devices */
@media (hover: hover) and (pointer: fine) {
  a.primary:hover {
    background: var(--button-hover-primary);
    transition: background 0.3s ease, border-color 0.3s ease;
  }
  
  a.secondary:hover {
    background: var(--button-hover-secondary);
    transition: background 0.3s ease, border-color 0.3s ease;
  }

  .footer a:hover {
    text-decoration: underline;
    text-underline-offset: 4px;
  }
}

@media (max-width: 1024px) {
  .page {
    padding: 40px;
  }

  .main {
    align-items: center;
  }

  .ctas {
    flex-direction: column;
  }

  .footer {
    flex-wrap: wrap;
  }
}

@media (max-width: 600px) {
  .page {
    padding: 30px;
    padding-bottom: 24px;
  }

  .main {
    align-items: center;
  }

  .ctas a {
    font-size: 14px;
    height: 40px;
  }
}

@media (prefers-color-scheme: dark) {
  .logo {
    filter: invert();
  }
}

.inputAction {
  position: absolute;
  right: 0;
  top: 0;
  margin: 20px; /* 上下左右に適切な余白を設定 */
  font-size: 24px; /* フォントサイズを調整 */
}

.happncontainer {
  display: flex;
  flex-direction: row; /* 横並びを明示的に指示 */
  justify-content: space-between; /* 横に要素を広げて配置 */
  align-items: center; /* 縦方向の中央揃え */
  
}

.happn, .happn2 {
  font-size: clamp(10px, 5vw, 30px); /* フォントサイズをレスポンシブに調整 */
}

.possibility-score, .possibility-reason {
  font-size: 14px;
  color: #666;
}

.possibility-reason {
  text-align: left
}

/* 戻るボタンのスタイル */
.back-btn {
  margin-top: 20px;
  padding: 10px 20px;
  background-color: #ccc;
  color: white;
  border: none;
  cursor: pointer;
}

.back-btn:hover {
  background-color: #aaa;
}

/* Home.module.css */


/* グローバルアニメーション設定 */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideUp {
  from {
    transform: translateY(100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes buttonHover {
  0% {
    background-color: #007bff;
    transform: scale(1);
  }
  50% {
    background-color: #0056b3;
    transform: scale(1.05);
  }
  100% {
    background-color: #007bff;
    transform: scale(1);
  }
}

/* テキストのアニメーション */
.happncontainer {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  animation: fadeIn 1s ease-out; /* フェードイン */
}

.happn, .happn2 {
  font-size: clamp(10px, 3vw, 20px);
  animation: slideUp 0.6s ease-out; /* 下からスライドアップ */
}

/* ボタンのアニメーション */
.possibility-btn {
  padding: 10px 20px;
  background-color: #007bff;
  color: white;
  border: none;
  cursor: pointer;
  font-size: 16px;
  transition: all 0.3s ease;
}

.possibility-btn:hover {

  animation: buttonHover 0.5s ease-in-out; /* ホバーモーション */
}

.back-btn {
  margin-top: 20px;
  padding: 10px 20px;
  background-color: #ccc;
  color: black;
  border: none;
  cursor: pointer;
  transition: all 0.3s ease;
}

.back-btn:hover {
  background-color: #aaa;
  transform: scale(1.25); /* ボタンを少し大きく */
}

/* ローディングアニメーション */
.loadingOverlay {
  animation: fadeIn 0.5s ease-in-out; /* フェードインで表示 */
}

.clicked-info{
  animation: fadeIn 0.7s ease-in-out; /* フェードイン */
  padding-top: 30px;
}

.inputText {
  padding-top: 30px;
}

.lookpage {
  display: flex;
  align-items: stretch; /* 各要素の高さを揃える */
  flex-wrap: nowrap; /* 折り返さないようにする */
  width: 100vw;
  height: 100vh;
}

.componentWrapper {
  flex: 2.5; /* 各コンポーネントを均等に並べる */
  padding-top: 1%;
}

.componentWrappe {
  flex: 1;
  padding-top: 1%;
}

@keyframes blink-border {
  0% { border-color: red; }
  50% { border-color: transparent; }
  100% { border-color: red; }
}

.blinking-node {
  animation: blink-border 0.75s infinite;
}

@keyframes blink-border {
  0% {
    border-color: #F3969A;
  }
  50% {
    border-color: #FFFFFF;
  }
  100% {
    border-color: #F3969A;
  }
}

.topTitle {
  font-family: 'Zen Maru Gothic', sans-serif;
  font-size: 50px;
}

.explain {
  margin-top: 50px;
  padding: 50px;
  background-color: #F4F4F5;
  border-radius: 8px;
}


.explainTitle {
  font-size: 24px;
  font-weight: bold;
  margin-bottom: 16px;
  color: #52525B;
  font-family: 'Zen Maru Gothic'
}

.buttonPrintScreen {
  display: flex;
  justify-content:space-around;
}

.clickedinfo {
  background-color: #fff; /* 背景色を白に設定 */
  border-radius: 8px; /* 角を丸くする */
  padding: 40px; /* 内側の余白 */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* 影をつける */
  max-width: 600px; /* 幅の制限 */
  margin-left: 20px;
  font-family: 'Zen Maru Gothic'
}

.Heart {
  display: flex;
  justify-content: center;
  align-items: center;
}

.firsts {
  display: 'flex';
  background-color: #fff; /* 背景色を白に設定 */
  border-radius: 8px; /* 角を丸くする */
  padding: 40px; /* 内側の余白 */
  margin-top: 20px;
  margin-bottom: 20px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* 影をつける */
  max-width: 100%; /* 幅の制限 */
  height: 98%;
  font-family: 'Zen Maru Gothic'
}

.bobo {
  width: 400px;
}

.positivemodeButton {
    display: flex;
    gap: 20px; /* ボタン間に20pxのスペース */
}